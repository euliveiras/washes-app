{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// root.tsx\nimport React, { useContext, useEffect } from \"react\";\nimport { withEmotionCache } from \"@emotion/react\";\nimport {ChakraProvider, extendTheme } from \"@chakra-ui/react\";\n\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\nimport type { LinksFunction, V2_MetaFunction } from \"@remix-run/node\"; // Depends on the runtime you choose\n\nimport { ServerStyleContext, ClientStyleContext } from \"./context\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n    {\n      charset: \"utf-8\",\n      title: \"washes-app\",\n      viewport: \"width=device-width,initial-scale=1\",\n    },\n  ];\n};\n\nexport let links: LinksFunction = () => {\n  return [\n    { rel: \"preconnect\", href: \"https://fonts.googleapis.com\" },\n    { rel: \"preconnect\", href: \"https://fonts.gstatic.com\" },\n    {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\",\n    },\n  ];\n};\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext);\n    const clientStyleData = useContext(ClientStyleContext);\n\n    // Only executed on client\n    useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(\" \")}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </body>\n      </html>\n    );\n  },\n);\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      \"html, body\": {\n        minBlockSize: \"100vh\",\n        width: \"100%\",\n        backgroundColor: \"#FFFFFF\",\n        fontFamily: \"Ubuntu, sans-serif\",\n      },\n    },\n  },\n});\n\nexport default function App() {\n  return (\n    <Document>\n      <ScrollRestoration />\n      <Scripts />\n      <ChakraProvider theme={theme} resetCSS>\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,mBAA6C;AA+DnC;AA/CH,IAAM,OAAwB,MAAM;AACzC,SAAO;AAAA,IACL;AAAA,MACE,SAAS;AAAA,MACT,OAAO;AAAA,MACP,UAAU;AAAA,IACZ;AAAA,EACF;AACF;AAEO,IAAI,QAAuB,MAAM;AACtC,SAAO;AAAA,IACL,EAAE,KAAK,cAAc,MAAM,+BAA+B;AAAA,IAC1D,EAAE,KAAK,cAAc,MAAM,4BAA4B;AAAA,IACvD;AAAA,MACE,KAAK;AAAA,MACL,MAAM;AAAA,IACR;AAAA,EACF;AACF;AAMA,IAAM,WAAW;AAAA,EACf,CAAC,EAAE,SAAS,GAAkB,iBAAiB;AAC7C,UAAM,sBAAkB,yBAAW,kBAAkB;AACrD,UAAM,sBAAkB,yBAAW,kBAAkB;AAGrD,gCAAU,MAAM;AAEd,mBAAa,MAAM,YAAY,SAAS;AAExC,YAAM,OAAO,aAAa,MAAM;AAChC,mBAAa,MAAM,MAAM;AACzB,WAAK,QAAQ,CAAC,QAAQ;AACpB,QAAC,aAAa,MAAc,WAAW,GAAG;AAAA,MAC5C,CAAC;AAED,yDAAiB;AAAA,IACnB,GAAG,CAAC,CAAC;AAEL,WACE,mDAAC,UAAK,MAAK,MACT;AAAA,yDAAC,UACC;AAAA,2DAAC,UAAD;AAAA;AAAA;AAAA;AAAA,eAAM;AAAA,QACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,eAAO;AAAA,QACN,mDAAiB,IAAI,CAAC,EAAE,KAAK,KAAK,IAAI,MACrC;AAAA,UAAC;AAAA;AAAA,YAEC,gBAAc,GAAG,OAAO,IAAI,KAAK,GAAG;AAAA,YACpC,yBAAyB,EAAE,QAAQ,IAAI;AAAA;AAAA,UAFlC;AAAA,UADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIA;AAAA,WARJ;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,MACA,mDAAC,UACE;AAAA;AAAA,QACD,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,eAAmB;AAAA,QACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,eAAS;AAAA,QACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,eAAY;AAAA,WAJd;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,SAjBF;AAAA;AAAA;AAAA;AAAA,WAkBA;AAAA,EAEJ;AACF;AAEA,IAAM,QAAQ,YAAY;AAAA,EACxB,QAAQ;AAAA,IACN,QAAQ;AAAA,MACN,cAAc;AAAA,QACZ,cAAc;AAAA,QACd,OAAO;AAAA,QACP,iBAAiB;AAAA,QACjB,YAAY;AAAA,MACd;AAAA,IACF;AAAA,EACF;AACF,CAAC;AAEc,SAAR,MAAuB;AAC5B,SACE,mDAAC,YACC;AAAA,uDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,WAAmB;AAAA,IACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,mDAAC,kBAAe,OAAc,UAAQ,MACpC,6DAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ,KADV;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ;",
  "names": []
}
