{
  "version": 3,
  "sources": ["../../../app/components/Table/Body.tsx", "../../../app/components/Table/Container.tsx", "../../../app/components/Table/Head.tsx", "../../../app/components/Table/Row.tsx", "../../../app/components/Table/index.tsx", "../../../app/components/WashesTable/Table.tsx", "../../../app/components/WashesTable/Rows/Head/Actions.tsx", "../../../app/components/WashesTable/Rows/Head/Driver.tsx", "../../../app/components/WashesTable/Rows/Head/LicensePlate.tsx", "../../../app/components/WashesTable/Rows/Head/Note.tsx", "../../../app/components/WashesTable/Rows/Head/ScheduledDate.tsx", "../../../app/components/WashesTable/Rows/Head/Status.tsx", "../../../app/components/WashesTable/Rows/Head/index.tsx", "../../../app/components/WashesTable/Rows/Body/Actions.tsx", "../../../app/components/WashesTable/Rows/Body/Driver.tsx", "../../../app/components/WashesTable/Rows/Body/LicensePlate.tsx", "../../../app/components/WashesTable/Rows/Body/Note.tsx", "../../../app/components/WashesTable/Rows/Body/ScheduledDate.tsx", "../../../app/components/WashesTable/Rows/Body/Status.tsx", "../../../app/components/WashesTable/Rows/Body/index.tsx", "../../../app/components/WashesTable/Filters.tsx", "../../../app/components/WashesTable/index.tsx"],
  "sourcesContent": ["import { Tbody, Td } from \"@chakra-ui/react\";\nimport type { TableCellProps } from \"@chakra-ui/react\";\nimport type { ReactNode } from \"react\";\nimport { useEffect, useRef } from \"react\";\n\ntype TableCellsProps = {\n  children: ReactNode;\n  onIntersecting?(lastElement?: Element): void;\n};\n\nexport function TableData({\n  children,\n  ...rest\n}: TableCellProps & { children: ReactNode }) {\n  return <Td {...rest}>{children}</Td>;\n}\n\nexport function Body({ children, onIntersecting }: TableCellsProps) {\n  const ref = useRef<HTMLTableSectionElement | null>(null);\n\n  useEffect(() => {\n    const options = {\n      rootMargin: \"0px\",\n      threshold: 1.0,\n    };\n\n    const element = ref.current?.lastElementChild ?? undefined;\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting && onIntersecting) onIntersecting(element);\n      });\n    }, options);\n\n    element && observer.observe(element);\n\n    return () => element && observer.unobserve(element);\n  }, [onIntersecting, ref]);\n  return <Tbody ref={ref}>{children}</Tbody>;\n}\n", "import type { TableContainerProps, TableProps } from \"@chakra-ui/react\";\nimport { TableContainer, Table } from \"@chakra-ui/react\";\nimport type { ReactNode } from \"react\";\n\ntype ContainerProps = {\n  containerProps?: TableContainerProps;\n  tableProps?: TableProps;\n  children: ReactNode;\n};\nexport function Container({\n  children,\n  containerProps,\n  tableProps,\n}: ContainerProps) {\n  return (\n    <TableContainer {...containerProps}>\n      <Table variant=\"simple\" {...tableProps}>\n        {children}\n      </Table>\n    </TableContainer>\n  );\n}\n", "import { Thead, Th } from \"@chakra-ui/react\";\nimport type { ReactNode } from \"react\";\n\ntype TableHeadProps = {\n  children: ReactNode;\n};\n\ntype HeadDataProps = {\n  children: ReactNode;\n};\n\nexport function HeadData({ children }: HeadDataProps) {\n  return <Th>{children}</Th>;\n}\n\nexport function Head({ children }: TableHeadProps) {\n  return <Thead>{children}</Thead>;\n}\n", "import { Tr } from \"@chakra-ui/react\";\nimport type { TableRowProps } from \"@chakra-ui/react\";\nimport type { ReactNode } from \"react\";\n\ntype RowProps = TableRowProps & {\n  children: ReactNode;\n};\nexport function Row({ children, ...rest }: RowProps) {\n  return <Tr {...rest}>{children}</Tr>;\n}\n", "import { Body, TableData } from \"./Body\";\nimport { Container } from \"./Container\";\nimport { Head, HeadData } from \"./Head\";\nimport { Row } from \"./Row\";\n\nexport const table = {\n  Table: Container,\n  Head: Head,\n  Body: Body,\n  Row: Row,\n  Data: TableData,\n  Label: HeadData,\n};\n", "import { table } from \"app/components/Table\";\nimport type { ReactNode } from \"react\";\nimport type { TableContainerProps, TableProps } from \"@chakra-ui/react\";\n\ntype Props = {\n  children: ReactNode;\n  containerProps?: TableContainerProps;\n  tableProps?: TableProps;\n};\n\nexport function Table({ children, ...props }: Props) {\n  return <table.Table {...props}>{children}</table.Table>;\n}\n", "import { table } from \"~/components/Table\";\n\nexport function Actions() {\n  return <table.Label>Actions</table.Label>;\n}\n", "import { table } from \"app/components/Table\";\n\nexport function Driver(){\n\treturn <table.Label>Motorista</table.Label>\n}\n", "import { table } from \"app/components/Table\";\n\nexport function LicensePlate(){\n\treturn <table.Label>Placa</table.Label>\n}\n", "import { table } from \"app/components/Table\";\n\nexport function Note() {\n  return <table.Label>Nota</table.Label>;\n}\n", "import { table } from \"app/components/Table\";\n\nexport function ScheduledDate() {\n  return <table.Label>Dia da lavagem</table.Label>;\n}\n", "import { table } from \"app/components/Table\";\n\nexport function Status() {\n  return <table.Label>Status</table.Label>;\n}\n", "import type { ReactNode } from \"react\";\nimport { table } from \"app/components/Table\";\n\nexport { Actions } from \"./Actions\";\nexport { Driver } from \"./Driver\";\nexport { LicensePlate } from \"./LicensePlate\";\nexport { Note } from \"./Note\";\nexport { ScheduledDate } from \"./ScheduledDate\";\nexport { Status } from \"./Status\";\n\nexport function Head({ children }: { children: ReactNode }) {\n  return <table.Head>{children}</table.Head>;\n}\n", "import { Flex, IconButton, Input } from \"@chakra-ui/react\";\nimport { table } from \"~/components/Table\";\nimport { MdClose, MdOutlineCheck } from \"react-icons/md\";\nimport { Form } from \"@remix-run/react\";\n\ntype Props = {\n  isCompleted?: boolean;\n  id?: string;\n};\n\nfunction CancelButton() {\n  return (\n    <IconButton\n      type=\"submit\"\n      value=\"false\"\n      name=\"isCompleted\"\n      aria-label=\"cancel-wash\"\n      colorScheme={\"red\"}\n      borderRadius=\"full\"\n      icon={<MdClose size={20} />}\n      onClick={(e) => e.stopPropagation()}\n    />\n  );\n}\n\nfunction ConfirmButton() {\n  return (\n    <IconButton\n      type=\"submit\"\n      value=\"true\"\n      name=\"isCompleted\"\n      aria-label=\"confirm-wash\"\n      colorScheme={\"green\"}\n      borderRadius=\"full\"\n      icon={<MdOutlineCheck size={20} />}\n      onClick={(e) => e.stopPropagation()}\n    />\n  );\n}\n\nexport function Actions({ isCompleted, id }: Props) {\n  return (\n    <table.Data>\n      <Flex as={Form} method=\"PUT\" gap={4}>\n        <Input type=\"hidden\" readOnly name=\"id\" value={id} />\n        {typeof isCompleted === \"undefined\" && (\n          <>\n            <CancelButton />\n            <ConfirmButton />\n          </>\n        )}\n        {isCompleted === true && <CancelButton />}\n        {isCompleted === false && <ConfirmButton />}\n      </Flex>\n    </table.Data>\n  );\n}\n", "import { table } from \"app/components/Table\";\n\ntype Props = {\n  driver: string;\n};\n\nexport function Driver({ driver }: Props) {\n  return <table.Data>{driver}</table.Data>;\n}\n", "import type { TableCellProps } from \"@chakra-ui/react\";\nimport { table } from \"app/components/Table\";\n\ntype Props = TableCellProps & {\n  licensePlate: string;\n};\n\nexport function LicensePlate({ licensePlate, ...rest }: Props) {\n  return <table.Data {...rest}>{licensePlate}</table.Data>;\n}\n", "import { table } from \"app/components/Table\";\n\ntype Props = {\n  note: string;\n};\n\nexport function Note({ note }: Props) {\n  return <table.Data>{note}</table.Data>;\n}\n", "import { table } from \"app/components/Table\";\nimport { format } from \"app/components/hooks/useDate\";\n\ntype Props = {\n  scheduledDate: string | Date;\n};\n\nexport function ScheduledDate({ scheduledDate }: Props) {\n  const date = format(scheduledDate, \"d 'de' MMMM',' RRRR\");\n  return <table.Data>{date}</table.Data>;\n}\n", "import { Alert, Text } from \"@chakra-ui/react\";\nimport type { AlertProps } from \"@chakra-ui/react\";\nimport { table } from \"app/components/Table\";\n\ntype Label = \"Atrasada\" | \"Aguardando\" | \"Confirmado\";\n\ntype Props = AlertProps & {\n  label: Label;\n};\n\nexport function Status({ label, ...rest }: Props) {\n  function getTextColor(label: Label): string {\n    if (label === \"Atrasada\") return \"red.400\";\n    else if (label === \"Aguardando\") return \"blue.400\";\n    else return \"green.400\";\n  }\n  const color = getTextColor(label);\n\n  return (\n    <table.Data>\n      <Alert borderRadius={\"full\"} justifyContent=\"center\" {...rest}>\n        <Text color={color}>{label}</Text>\n      </Alert>\n    </table.Data>\n  );\n}\n", "import type { ReactNode } from \"react\";\nimport { table } from \"app/components/Table\";\nimport type { TableRowProps } from \"@chakra-ui/react\";\nimport type { LinkProps } from \"@remix-run/react\";\nimport { useNavigate } from \"@remix-run/react\";\n\nexport { Actions } from \"./Actions\";\nexport { Driver } from \"./Driver\";\nexport { LicensePlate } from \"./LicensePlate\";\nexport { Note } from \"./Note\";\nexport { ScheduledDate } from \"./ScheduledDate\";\nexport { Status } from \"./Status\";\n\ntype RowProps = Partial<TableRowProps> & Partial<LinkProps>;\n\nexport function Row({ children, ...rest }: RowProps) {\n  const navigate = useNavigate();\n\n  function goTo() {\n    const path = `/wash/${rest.id}`;\n    navigate(path);\n  }\n\n  return (\n    <table.Row cursor={\"pointer\"} {...rest} onClick={goTo}>\n      {children}\n    </table.Row>\n  );\n}\n\nexport function Body({\n  children,\n  onIntersecting,\n}: {\n  children: ReactNode;\n  onIntersecting?(lastElement?: Element): void;\n}) {\n  return <table.Body onIntersecting={onIntersecting}>{children}</table.Body>;\n}\n", "import { Input, Select } from \"@chakra-ui/react\";\nimport type {\n  InputProps as ChakaInputProps,\n  SelectProps,\n  InputProps,\n} from \"@chakra-ui/react\";\n\ntype DateInputProps = ChakaInputProps;\n\ntype StatusInputProps = SelectProps;\n\nexport function Status({ ...rest }: StatusInputProps) {\n  return (\n    <Select\n      maxInlineSize=\"260px\"\n      minBlockSize={12}\n      placeholder=\"Status da lavagem\"\n      variant=\"outline\"\n      colorScheme={\"gray\"}\n      borderRadius=\"full\"\n      display=\"flex\"\n      alignItems={\"center\"}\n      {...rest}\n    >\n      <option value=\"COMPLETED\">Completa</option>\n      <option value=\"INCOMPLETED\">Incompleta</option>\n      <option value=\"ALL\">Todas</option>\n    </Select>\n  );\n}\n\nexport function Date({ ...rest }: DateInputProps) {\n  return (\n    <Input\n      type=\"date\"\n      variant=\"outline\"\n      borderRadius={\"full\"}\n      maxInlineSize=\"260px\"\n      minBlockSize={12}\n      {...rest}\n    />\n  );\n}\n\nexport function Search({ ...props }: InputProps) {\n  return (\n    <Input\n      type=\"text\"\n      name=\"licensePlate\"\n      placeholder=\"Procurar placa\"\n      variant=\"outline\"\n      borderRadius={\"full\"}\n      maxInlineSize=\"260px\"\n      minBlockSize={12}\n      {...props}\n    />\n  );\n}\n", "import { Table } from \"./Table\";\nimport {\n  Actions,\n  Driver,\n  LicensePlate,\n  Note,\n  ScheduledDate,\n  Status,\n  Head,\n} from \"./Rows/Head\";\n\nimport * as TableBody from \"./Rows/Body\";\nimport { Date as FilterDate, Search, Status as FilterStatus } from \"./Filters\";\n\nexport const washesTable = {\n  filters: {\n    Search,\n    Date: FilterDate,\n    Status: FilterStatus,\n  },\n\n  Table: Table,\n  Head: Head,\n  headData: {\n    Actions,\n    Driver,\n    LicensePlate,\n    Note,\n    ScheduledDate,\n    Status,\n  },\n  Body: TableBody.Body,\n  Row: TableBody.Row,\n  bodyData: {\n    Actions: TableBody.Actions,\n    Driver: TableBody.Driver,\n    LicensePlate: TableBody.LicensePlate,\n    Note: TableBody.Note,\n    ScheduledDate: TableBody.ScheduledDate,\n    Status: TableBody.Status,\n  },\n};\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Table", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Head", "import_jsx_dev_runtime", "Actions", "import_jsx_dev_runtime", "Driver", "import_jsx_dev_runtime", "LicensePlate", "import_jsx_dev_runtime", "Note", "import_jsx_dev_runtime", "ScheduledDate", "import_jsx_dev_runtime", "Status", "label", "import_jsx_dev_runtime", "Row", "Body", "import_jsx_dev_runtime", "Status", "Status", "Table", "Head", "Body", "Row", "Actions", "Driver", "LicensePlate", "Note", "ScheduledDate"]
}
