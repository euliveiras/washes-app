{
  "version": 3,
  "sources": ["../../../app/routes/_auth.home.tsx", "../../../app/components/Home/Container.tsx", "../../../app/components/Home/index.tsx"],
  "sourcesContent": ["import { Button, Divider, Flex, Input, Text } from \"@chakra-ui/react\";\nimport type { ActionArgs, LoaderArgs } from \"@vercel/remix\";\nimport { json, redirect } from \"@vercel/remix\";\nimport {\n  Form,\n  Link,\n  useActionData,\n  useLoaderData,\n  useSearchParams,\n  useSubmit,\n} from \"@remix-run/react\";\nimport { validateSessionId } from \"src/infra/http/helpers/validate-session-id\";\nimport { findManyWashesController } from \"src/infra/http/controllers/find-many-washes-controller\";\nimport { commitSession, getSession } from \"~/sessions\";\nimport { home } from \"app/components/Home\";\nimport { washesTable } from \"app/components/WashesTable\";\nimport { LuExternalLink } from \"react-icons/lu\";\nimport type { Wash } from \"@prisma/client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { confirmWashController } from \"src/infra/http/controllers/confirm-wash-controller\";\nimport { unconfirmWashController } from \"src/infra/http/controllers/unconfirm-wash-controller\";\n\n//export const headers: HeadersFunction = ({ parentHeaders }) => {\n//  const maxAge = parentHeaders.get(\"Cache-control\") ?? `max-age=${60 * 60}`;\n//\n//  return {\n//    \"Cache-Control\": maxAge,\n//  };\n//};\n\nexport async function action({ request }: ActionArgs) {\n  const form = await request.formData();\n  const id = form.get(\"id\")?.toString();\n  const isCompleted = form.get(\"isCompleted\");\n  let wash, error;\n\n  if (!id) return json({ error: \"\" });\n  if (typeof isCompleted === \"undefined\") return json({ error: \"\" });\n\n  if (isCompleted === \"true\") {\n    const data = await confirmWashController({ id });\n    wash = data.wash;\n    error = data.error;\n  } else {\n    const data = await unconfirmWashController({ id });\n    wash = data.wash;\n    error = data.error;\n  }\n  if (error) {\n    return json({ error: { message: error.message } });\n  }\n\n  return json({ wash });\n}\n\nexport async function loader({ request }: LoaderArgs) {\n  const url = new URL(request.url);\n  const params = new URLSearchParams(url.searchParams);\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const licensePlate = params.get(\"licensePlate\") ?? undefined;\n  const startDate = params.get(\"startDate\") ?? undefined;\n  const endDate = params.get(\"endDate\") ?? undefined;\n  const washStatus = params.get(\"status\") ?? undefined;\n  const cursor = params.get(\"cursor\") ?? undefined;\n\n  const token = session.get(\"token\");\n\n  if (!token) {\n    throw redirect(\"/sign-in\");\n  }\n\n  const { error, user } = await validateSessionId({ sessionId: token });\n\n  if (error || !user) {\n    session.unset(\"token\");\n    throw redirect(\"/sign-in\", {\n      headers: {\n        \"Set-Cookie\": await commitSession(session),\n      },\n    });\n  }\n\n  const dto = {\n    filters: {\n      createdBy: user.id,\n      vehicleId: licensePlate !== \"\" ? licensePlate : undefined,\n      startDate,\n      endDate,\n      status: washStatus as \"ALL\" | \"COMPLETED\" | \"INCOMPLETED\" | undefined,\n    },\n    take: 4,\n    cursor: { id: cursor },\n  };\n\n  const { washes }: { washes: Partial<Wash[]> } =\n    await findManyWashesController(dto);\n\n  return json({ user, washes });\n}\n\nexport default function () {\n  const { user, washes } = useLoaderData() as {\n    user: any;\n    washes: Partial<Wash>[];\n  };\n  const [params] = useSearchParams();\n  const actionData = useActionData() as { wash: Partial<Wash> };\n  const [data, setData] = useState(washes);\n  const submit = useSubmit();\n  const ref = useRef<HTMLFormElement | null>(null);\n\n  const onLastRowIntersecting = (lastElement: Element) => {\n    //const form = new FormData(ref?.current ?? undefined);\n    // form.set(\"cursor\", lastElement.id);\n    //  submit(form, { preventScrollReset: true, replace: true });\n  };\n\n  function onFilter() {\n    const form = new FormData(ref?.current ?? undefined);\n    form.delete(\"cursor\");\n    submit(form, { preventScrollReset: true, replace: true });\n    setData([]);\n  }\n\n  function onLoadMore() {\n    const form = new FormData(ref?.current ?? undefined);\n    submit(form, { preventScrollReset: true, replace: true });\n  }\n\n  // filtros\n  // actions\n  useEffect(() => {\n    if (actionData?.wash) {\n      setData((d) => {\n        const arr = d;\n        const index = arr.findIndex((v) => v?.id === actionData.wash.id);\n        if (index > -1) arr[index] = actionData.wash;\n        return arr;\n      });\n    }\n  }, [actionData]);\n\n  useEffect(() => {\n    setData((d) => {\n      const arr = [...d];\n      washes.forEach((w) => {\n        const i = arr.findIndex((v) => v?.id === w?.id);\n        if (i > -1) return;\n        else arr.push(w);\n      });\n      return arr;\n    });\n  }, [washes]);\n\n  return (\n    <home.Container\n      blockSize={\"100%\"}\n      inlineSize=\"100%\"\n      paddingInline={[2, 2, 8]}\n      position=\"relative\"\n    >\n      <Text as=\"h1\" fontSize={\"4xl\"}>\n        Ol\u00E1, {user.username}\n      </Text>\n      <Flex\n        flexDir={[\"column\"]}\n        align=\"center\"\n        paddingBlock={6}\n        gap={6}\n        inlineSize=\"100%\"\n      >\n        <Flex\n          as={Form}\n          preventScrollReset\n          id=\"filters\"\n          ref={ref}\n          flexDir={[\"column\", \"column\", \"row\"]}\n          gap={4}\n          align=\"center\"\n          justify={\"space-evenly\"}\n          inlineSize=\"100%\"\n        >\n          <Input\n            type=\"hidden\"\n            readOnly\n            name=\"cursor\"\n            value={data[data.length - 1]?.id}\n          />\n          <washesTable.filters.Search />\n          <Flex gap={[2, 2, 6]} align=\"center\">\n            <washesTable.filters.Date name=\"startDate\" size=\"sm\" />\n            <Text>at\u00E9</Text>\n            <washesTable.filters.Date name=\"endDate\" size=\"sm\" />\n          </Flex>\n          <washesTable.filters.Status\n            name=\"status\"\n            inlineSize={\"fit-content\"}\n          />\n          <Flex gap={4}>\n            <Button\n              minInlineSize={\"160px\"}\n              colorScheme={\"gray\"}\n              borderRadius={\"lg\"}\n              onClick={() => ref.current?.reset()}\n            >\n              limpar campos\n            </Button>\n            <Button\n              minInlineSize={\"160px\"}\n              variant=\"solid\"\n              colorScheme={\"blue\"}\n              borderRadius={\"lg\"}\n              onClick={onFilter}\n            >\n              filtrar\n            </Button>\n          </Flex>\n        </Flex>\n        <Divider />\n        <Flex justify={\"space-between\"} align=\"center\" inlineSize=\"90%\">\n          {washes && (\n            <Text fontWeight={\"semibold\"} color=\"gray.400\" fontSize=\"sm\">\n              {data.length > 0\n                ? `showing ${data.length} results`\n                : \"nenhuma lavagem foi encontrada\"}\n            </Text>\n          )}\n          <Button\n            as={Link}\n            reloadDocument\n            to={`/csv?${params}`}\n            variant=\"outline\"\n            borderRadius={\"full\"}\n            rightIcon={<LuExternalLink />}\n            value=\"EXPORT\"\n          >\n            baixar\n          </Button>\n        </Flex>\n      </Flex>\n      <washesTable.Table\n        containerProps={{ marginBlock: 4, marginBlockEnd: 8 }}\n        tableProps={{ variant: \"striped\" }}\n      >\n        <washesTable.Head>\n          <washesTable.Row>\n            <washesTable.headData.LicensePlate />\n            <washesTable.headData.ScheduledDate />\n            <washesTable.headData.Status />\n            <washesTable.headData.Note />\n            <washesTable.headData.Actions />\n          </washesTable.Row>\n        </washesTable.Head>\n\n        <washesTable.Body onIntersecting={onLastRowIntersecting}>\n          {data?.map((w, i, arr) => {\n            return (\n              <washesTable.Row\n                key={w?.id}\n                id={w?.id}\n              >\n                <washesTable.bodyData.LicensePlate\n                  licensePlate={w.vehicleId ?? \"\"}\n                />\n                <washesTable.bodyData.ScheduledDate\n                  scheduledDate={w?.scheduleDate ?? \"\"}\n                />\n                <washesTable.bodyData.Status\n                  status={w?.isCompleted === true ? \"success\" : \"error\"}\n                  label={w?.isCompleted === true ? \"Confirmado\" : \"Atrasada\"}\n                />\n                <washesTable.bodyData.Note note={w?.note ?? \"\"} />\n                <washesTable.bodyData.Actions\n                  isCompleted={w?.isCompleted}\n                  id={w?.id}\n                />\n              </washesTable.Row>\n            );\n          })}\n        </washesTable.Body>\n      </washesTable.Table>\n      <Flex inlineSize={\"100%\"} justify=\"center\" paddingBlockEnd={8}>\n        <Button variant={\"solid\"} colorScheme=\"blue\" onClick={onLoadMore}>\n          Carregar mais\n        </Button>\n      </Flex>\n    </home.Container>\n  );\n}\n", "import type { BoxProps } from \"@chakra-ui/react\";\nimport { Box } from \"@chakra-ui/react\";\n\ntype ContainerProps = BoxProps;\n\nexport function Container({ children, ...props }: ContainerProps) {\n  return <Box {...props}>{children}</Box>;\n}\n", "import { Container } from \"./Container\";\n\nexport const home = {\n  Container: Container,\n};\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "_a"]
}
