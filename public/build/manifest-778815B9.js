window.__remixManifest={"version":"778815b9","entry":{"module":"http://localhost:3001/build/entry.client-BART2GMV.js","imports":["http://localhost:3001/build/_shared/chunk-XO3EGWRB.js","http://localhost:3001/build/_shared/chunk-DC5KBJVF.js","http://localhost:3001/build/_shared/chunk-PKOMFC7F.js","http://localhost:3001/build/_shared/chunk-ANXL52AQ.js","http://localhost:3001/build/_shared/chunk-6SJDMTBK.js","http://localhost:3001/build/_shared/chunk-OKS54H4S.js","http://localhost:3001/build/_shared/chunk-3YOGVSK4.js","http://localhost:3001/build/_shared/chunk-KFR6H6JJ.js","http://localhost:3001/build/_shared/chunk-I54TBTTL.js","http://localhost:3001/build/_shared/chunk-CT6324V4.js"]},"routes":{"root":{"id":"root","path":"","module":"http://localhost:3001/build/root-HOLDGSYH.js","imports":["http://localhost:3001/build/_shared/chunk-WSTLIJHY.js","http://localhost:3001/build/_shared/chunk-IJA4GF5B.js"],"hasAction":false,"hasLoader":false,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/$":{"id":"routes/$","parentId":"root","path":"*","module":"http://localhost:3001/build/routes/$-UTWAQQMJ.js","imports":["http://localhost:3001/build/_shared/chunk-EOXYKIW2.js"],"hasAction":false,"hasLoader":false,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/_auth":{"id":"routes/_auth","parentId":"root","module":"http://localhost:3001/build/routes/_auth-ZHDK6DRU.js","imports":["http://localhost:3001/build/_shared/chunk-ZMLXUN7N.js","http://localhost:3001/build/_shared/chunk-EOXYKIW2.js","http://localhost:3001/build/_shared/chunk-DXSXC535.js"],"hasAction":false,"hasLoader":true,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/_auth.home":{"id":"routes/_auth.home","parentId":"routes/_auth","path":"home","module":"http://localhost:3001/build/routes/_auth.home-HQRMCUPM.js","imports":["http://localhost:3001/build/_shared/chunk-WSTLIJHY.js","http://localhost:3001/build/_shared/chunk-IJA4GF5B.js"],"hasAction":false,"hasLoader":true,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/_auth.new-wash._index":{"id":"routes/_auth.new-wash._index","parentId":"routes/_auth","path":"new-wash","index":true,"module":"http://localhost:3001/build/routes/_auth.new-wash._index-IAETWNDT.js","imports":["http://localhost:3001/build/_shared/chunk-WSTLIJHY.js","http://localhost:3001/build/_shared/chunk-IJA4GF5B.js"],"hasAction":false,"hasLoader":true,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/_index":{"id":"routes/_index","parentId":"root","index":true,"module":"http://localhost:3001/build/routes/_index-M23M7LSB.js","hasAction":false,"hasLoader":true,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/sign-in":{"id":"routes/sign-in","parentId":"root","path":"sign-in","module":"http://localhost:3001/build/routes/sign-in-LN773YMG.js","imports":["http://localhost:3001/build/_shared/chunk-DXSXC535.js"],"hasAction":true,"hasLoader":true,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/sign-up":{"id":"routes/sign-up","parentId":"root","path":"sign-up","module":"http://localhost:3001/build/routes/sign-up-P2IFJXMP.js","hasAction":true,"hasLoader":false,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/vehicle-search":{"id":"routes/vehicle-search","parentId":"root","path":"vehicle-search","module":"http://localhost:3001/build/routes/vehicle-search-6CUZ7OJ2.js","hasAction":false,"hasLoader":true,"hasCatchBoundary":false,"hasErrorBoundary":false},"routes/washes-search":{"id":"routes/washes-search","parentId":"root","path":"washes-search","module":"http://localhost:3001/build/routes/washes-search-MIRG2EVD.js","hasAction":false,"hasLoader":true,"hasCatchBoundary":false,"hasErrorBoundary":false}},"hmr":{"runtime":"http://localhost:3001/build/_shared/chunk-KFR6H6JJ.js","routes":{"app/routes/_auth.new-wash._index.tsx":{"loaderHash":"export async function loader({\n  request\n}: LoaderArgs) {\n  const url = new URL(request.url);\n  const vehicle = JSON.parse(url.searchParams.get(\"vehicle\") ?? \"null\");\n  if (!vehicle?.licensePlate || !vehicle.type) return json({});\n  const washCycle = mocks.washCycles.find(w => w.vehicleId === vehicle.licensePlate);\n  const washes = mocks.washes.filter(w => w.vehicleId === vehicle.licensePlate);\n  return json({\n    washes,\n    washCycle\n  });\n}"},"app/routes/_auth.home.tsx":{"loaderHash":"export async function loader({\n  request\n}: LoaderArgs) {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const token = session.get(\"token\");\n  console.log(\"home loader\");\n  if (!token) {\n    throw redirect(\"/sign-in\");\n  }\n  const {\n    error,\n    user\n  } = await validateSessionId({\n    sessionId: token\n  });\n  if (error || !user) {\n    session.unset(\"token\");\n    throw redirect(\"/sign-in\", {\n      headers: {\n        \"Set-Cookie\": await commitSession(session)\n      }\n    });\n  }\n  return json({\n    user\n  });\n}"},"app/routes/washes-search/route.ts":{"loaderHash":"export async function loader({\n  request\n}: LoaderArgs) {\n  const url = new URL(request.url);\n  const query = url.searchParams.get(\"query\");\n  if (typeof query !== \"string\" || query === \"\") return json(null);\n\n  // const { error, washCycle, washes } = await getNextWashesAndCycle(query);\n  const washes = mocks.washes.filter(w => w.vehicleId === query);\n  const washCycle = mocks.washCycles.find(w => w.vehicleId === query);\n  let error;\n  if (!washCycle) error = null;\n  if (error) return json({\n    error\n  });\n  return json({\n    washCycle,\n    washes\n  });\n}"},"app/routes/sign-in.tsx":{"loaderHash":"export async function loader({\n  request\n}: LoaderArgs) {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const token = session.get(\"token\");\n  if (!token) {\n    // Redirect to the home page if they are already signed in.\n    return json({});\n  }\n  const {\n    user\n  } = await validateSessionId({\n    sessionId: token\n  });\n  if (user) {\n    return redirect(\"/home\");\n  }\n  return json({});\n}"},"app/routes/_index.tsx":{"loaderHash":"export async function loader() {\n  return redirect(\"/home\");\n}"},"app/routes/vehicle-search/route.ts":{"loaderHash":"export async function loader({\n  request\n}: LoaderArgs) {\n  const url = new URL(request.url);\n  const query = url.searchParams.get(\"query\");\n  if (typeof query !== \"string\" || query == \"\") return json(null);\n  return json(vehicles.filter(v => v.licensePlate === query));\n}"},"app/routes/_auth.tsx":{"loaderHash":"export async function loader({\n  request\n}: LoaderArgs) {\n  const session = await getSession(request.headers.get(\"Cookie\"));\n  const url = new URL(request.url);\n  const token = session.get(\"token\");\n  if (!token) {\n    throw redirect(\"/sign-in\");\n  }\n  const {\n    error,\n    user\n  } = await validateSessionId({\n    sessionId: token\n  });\n  if (error || !user) {\n    session.unset(\"token\");\n    throw redirect(\"/sign-in\", {\n      headers: {\n        \"Set-Cookie\": await commitSession(session)\n      }\n    });\n  }\n  return json({\n    path: url.pathname,\n    user\n  }, {\n    headers: {\n      \"Cache-Control\": `max-age=${60 * 60}`\n    }\n  });\n}"}},"timestamp":1692154263729},"url":"http://localhost:3001/build/manifest-778815B9.js"};